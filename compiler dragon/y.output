Terminals unused in grammar

   NUMBER
   LT
   LE
   GT
   GE
   EQ
   NEQ
   OR
   PLUS
   MINUS
   AND
   STAR
   SLASH
   DIV
   MOD
   CHAR
   STRING
   BOOLEAN
   EMTPY
   CONDITIONAL
   TYPE
   NAME
   LIST
   ARRAY_ACCESS
   ARRAY_RANGE
   STATEMENT
   FUNCTION_CALL
   PROCEDURE_CALL
   WHILE_DO
   DECL
   SUBDECL
   SUBDECLS
   SUBPROGDECL
   SUBPROGDECLHEAD
   SUBPROGDECLBODY
   LOCAL
   PARAMETER
   IDLIST
   EXPR
   EXPRLIST
   PARALIST
   ARGLIST
   DECLIST
   STATLIST
   PROCSTAT
   COMPSTAT
   FROM


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 $@3: %empty

    4 $@4: %empty

    5 program: PROGRAM ID $@1 '(' identifier_list ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    6 identifier_list: ID
    7                | identifier_list ',' ID

    8 declarations: declarations VAR identifier_list ':' type ';'
    9             | %empty

   10 type: standard_type
   11     | ARRAY '[' INUM DOTDOT INUM ']' OF standard_type

   12 standard_type: INTEGER
   13              | REAL

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   15                        | %empty

   16 $@5: %empty

   17 $@6: %empty

   18 subprogram_declaration: subprogram_head $@5 declarations $@6 subprogram_declarations compound_statement

   19 $@7: %empty

   20 subprogram_head: FUNCTION ID $@7 arguments ':' standard_type ';'

   21 $@8: %empty

   22 subprogram_head: PROCEDURE ID $@8 arguments ';'

   23 $@9: %empty

   24 arguments: $@9 '(' parameter_list ')'
   25          | %empty

   26 parameter_list: identifier_list ':' type
   27               | parameter_list ';' identifier_list ':' type
   28               | %empty

   29 compound_statement: BBEGIN optional_statements END

   30 optional_statements: statement_list
   31                    | %empty

   32 statement_list: statement
   33               | statement_list ';' statement

   34 statement: conditions
   35          | ifelse

   36 conditions: variable ASSIGNOP expression
   37           | procedure_statement
   38           | compound_statement
   39           | IF expression THEN conditions ELSE conditions
   40           | WHILE expression DO conditions
   41           | FOR ID ASSIGNOP expression TO expression DO conditions

   42 ifelse: IF expression THEN statement
   43       | IF expression THEN conditions ELSE ifelse

   44 variable: ID
   45         | ID '[' expression ']'

   46 procedure_statement: ID
   47                    | ID '(' expression_list ')'
   48                    | WRITE '(' expression ')'
   49                    | READ '(' expression ')'

   50 expression_list: expression
   51                | expression_list ',' expression

   52 expression: simple_expression
   53           | simple_expression RELOP simple_expression

   54 simple_expression: term
   55                  | ADDOP term
   56                  | simple_expression ADDOP term

   57 term: factor
   58     | term MULOP factor

   59 factor: ID
   60       | ID '(' expression_list ')'
   61       | ID '[' expression ']'
   62       | INUM
   63       | RNUM
   64       | '(' expression ')'
   65       | NOT factor


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 24 47 48 49 60 64
')' (41) 5 24 47 48 49 60 64
',' (44) 7 51
'.' (46) 5
':' (58) 8 20 26 27
';' (59) 5 8 14 20 22 27 33
'[' (91) 11 45 61
']' (93) 11 45 61
error (256)
NUMBER (258)
INUM (259) 11 62
RNUM (260) 63
ID (261) 5 6 7 20 22 41 44 45 46 47 59 60 61
NOT (262) 65
ASSIGNOP (263) 36 41
RELOP (264) 53
LT (265)
LE (266)
GT (267)
GE (268)
EQ (269)
NEQ (270)
ADDOP (271) 55 56
OR (272)
PLUS (273)
MINUS (274)
MULOP (275) 58
AND (276)
STAR (277)
SLASH (278)
DIV (279)
MOD (280)
PROGRAM (281) 5
VAR (282) 8
ARRAY (283) 11
OF (284) 11
DOTDOT (285) 11
INTEGER (286) 12
REAL (287) 13
CHAR (288)
STRING (289)
BOOLEAN (290)
FUNCTION (291) 20
PROCEDURE (292) 22
READ (293) 49
WRITE (294) 48
BBEGIN (295) 29
END (296) 29
IF (297) 39 42 43
THEN (298) 39 42 43
ELSE (299) 39 43
WHILE (300) 40
DO (301) 40 41
FOR (302) 41
TO (303) 41
EMTPY (304)
CONDITIONAL (305)
TYPE (306)
NAME (307)
LIST (308)
ARRAY_ACCESS (309)
ARRAY_RANGE (310)
STATEMENT (311)
FUNCTION_CALL (312)
PROCEDURE_CALL (313)
WHILE_DO (314)
DECL (315)
SUBDECL (316)
SUBDECLS (317)
SUBPROGDECL (318)
SUBPROGDECLHEAD (319)
SUBPROGDECLBODY (320)
LOCAL (321)
PARAMETER (322)
IDLIST (323)
EXPR (324)
EXPRLIST (325)
PARALIST (326)
ARGLIST (327)
DECLIST (328)
STATLIST (329)
PROCSTAT (330)
COMPSTAT (331)
FROM (332)


Nonterminals, with rules where they appear

$accept (86)
    on left: 0
program (87)
    on left: 5, on right: 0
$@1 (88)
    on left: 1, on right: 5
$@2 (89)
    on left: 2, on right: 5
$@3 (90)
    on left: 3, on right: 5
$@4 (91)
    on left: 4, on right: 5
identifier_list (92)
    on left: 6 7, on right: 5 7 8 26 27
declarations (93)
    on left: 8 9, on right: 5 8 18
type (94)
    on left: 10 11, on right: 8 26 27
standard_type (95)
    on left: 12 13, on right: 10 11 20
subprogram_declarations (96)
    on left: 14 15, on right: 5 14 18
subprogram_declaration (97)
    on left: 18, on right: 14
$@5 (98)
    on left: 16, on right: 18
$@6 (99)
    on left: 17, on right: 18
subprogram_head (100)
    on left: 20 22, on right: 18
$@7 (101)
    on left: 19, on right: 20
$@8 (102)
    on left: 21, on right: 22
arguments (103)
    on left: 24 25, on right: 20 22
$@9 (104)
    on left: 23, on right: 24
parameter_list (105)
    on left: 26 27 28, on right: 24 27
compound_statement (106)
    on left: 29, on right: 5 18 38
optional_statements (107)
    on left: 30 31, on right: 29
statement_list (108)
    on left: 32 33, on right: 30 33
statement (109)
    on left: 34 35, on right: 32 33 42
conditions (110)
    on left: 36 37 38 39 40 41, on right: 34 39 40 41 43
ifelse (111)
    on left: 42 43, on right: 35 43
variable (112)
    on left: 44 45, on right: 36
procedure_statement (113)
    on left: 46 47 48 49, on right: 37
expression_list (114)
    on left: 50 51, on right: 47 51 60
expression (115)
    on left: 52 53, on right: 36 39 40 41 42 43 45 48 49 50 51 61 64
simple_expression (116)
    on left: 54 55 56, on right: 52 53 56
term (117)
    on left: 57 58, on right: 54 55 56 58
factor (118)
    on left: 59 60 61 62 63 64 65, on right: 57 58 65


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    5 program: PROGRAM . ID $@1 '(' identifier_list ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    5 program: PROGRAM ID . $@1 '(' identifier_list ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    5 program: PROGRAM ID $@1 . '(' identifier_list ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    '('  shift, and go to state 6


State 6

    5 program: PROGRAM ID $@1 '(' . identifier_list ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    ID  shift, and go to state 7

    identifier_list  go to state 8


State 7

    6 identifier_list: ID .

    $default  reduce using rule 6 (identifier_list)


State 8

    5 program: PROGRAM ID $@1 '(' identifier_list . ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'
    7 identifier_list: identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 9

    5 program: PROGRAM ID $@1 '(' identifier_list ')' . ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    ';'  shift, and go to state 11


State 10

    7 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 12


State 11

    5 program: PROGRAM ID $@1 '(' identifier_list ')' ';' . $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.'

    $default  reduce using rule 2 ($@2)

    $@2  go to state 13


State 12

    7 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 7 (identifier_list)


State 13

    5 program: PROGRAM ID $@1 '(' identifier_list ')' ';' $@2 . declarations $@3 subprogram_declarations $@4 compound_statement '.'

    $default  reduce using rule 9 (declarations)

    declarations  go to state 14


State 14

    5 program: PROGRAM ID $@1 '(' identifier_list ')' ';' $@2 declarations . $@3 subprogram_declarations $@4 compound_statement '.'
    8 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 15

    $default  reduce using rule 3 ($@3)

    $@3  go to state 16


State 15

    8 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 7

    identifier_list  go to state 17


State 16

    5 program: PROGRAM ID $@1 '(' identifier_list ')' ';' $@2 declarations $@3 . subprogram_declarations $@4 compound_statement '.'

    $default  reduce using rule 15 (subprogram_declarations)

    subprogram_declarations  go to state 18


State 17

    7 identifier_list: identifier_list . ',' ID
    8 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 10
    ':'  shift, and go to state 19


State 18

    5 program: PROGRAM ID $@1 '(' identifier_list ')' ';' $@2 declarations $@3 subprogram_declarations . $@4 compound_statement '.'
   14 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    FUNCTION   shift, and go to state 20
    PROCEDURE  shift, and go to state 21

    $default  reduce using rule 4 ($@4)

    $@4                     go to state 22
    subprogram_declaration  go to state 23
    subprogram_head         go to state 24


State 19

    8 declarations: declarations VAR identifier_list ':' . type ';'

    ARRAY    shift, and go to state 25
    INTEGER  shift, and go to state 26
    REAL     shift, and go to state 27

    type           go to state 28
    standard_type  go to state 29


State 20

   20 subprogram_head: FUNCTION . ID $@7 arguments ':' standard_type ';'

    ID  shift, and go to state 30


State 21

   22 subprogram_head: PROCEDURE . ID $@8 arguments ';'

    ID  shift, and go to state 31


State 22

    5 program: PROGRAM ID $@1 '(' identifier_list ')' ';' $@2 declarations $@3 subprogram_declarations $@4 . compound_statement '.'

    BBEGIN  shift, and go to state 32

    compound_statement  go to state 33


State 23

   14 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 34


State 24

   18 subprogram_declaration: subprogram_head . $@5 declarations $@6 subprogram_declarations compound_statement

    $default  reduce using rule 16 ($@5)

    $@5  go to state 35


State 25

   11 type: ARRAY . '[' INUM DOTDOT INUM ']' OF standard_type

    '['  shift, and go to state 36


State 26

   12 standard_type: INTEGER .

    $default  reduce using rule 12 (standard_type)


State 27

   13 standard_type: REAL .

    $default  reduce using rule 13 (standard_type)


State 28

    8 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 37


State 29

   10 type: standard_type .

    $default  reduce using rule 10 (type)


State 30

   20 subprogram_head: FUNCTION ID . $@7 arguments ':' standard_type ';'

    $default  reduce using rule 19 ($@7)

    $@7  go to state 38


State 31

   22 subprogram_head: PROCEDURE ID . $@8 arguments ';'

    $default  reduce using rule 21 ($@8)

    $@8  go to state 39


State 32

   29 compound_statement: BBEGIN . optional_statements END

    ID      shift, and go to state 40
    READ    shift, and go to state 41
    WRITE   shift, and go to state 42
    BBEGIN  shift, and go to state 32
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    FOR     shift, and go to state 45

    $default  reduce using rule 31 (optional_statements)

    compound_statement   go to state 46
    optional_statements  go to state 47
    statement_list       go to state 48
    statement            go to state 49
    conditions           go to state 50
    ifelse               go to state 51
    variable             go to state 52
    procedure_statement  go to state 53


State 33

    5 program: PROGRAM ID $@1 '(' identifier_list ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement . '.'

    '.'  shift, and go to state 54


State 34

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 14 (subprogram_declarations)


State 35

   18 subprogram_declaration: subprogram_head $@5 . declarations $@6 subprogram_declarations compound_statement

    $default  reduce using rule 9 (declarations)

    declarations  go to state 55


State 36

   11 type: ARRAY '[' . INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 56


State 37

    8 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 8 (declarations)


State 38

   20 subprogram_head: FUNCTION ID $@7 . arguments ':' standard_type ';'

    ':'       reduce using rule 25 (arguments)
    $default  reduce using rule 23 ($@9)

    arguments  go to state 57
    $@9        go to state 58


State 39

   22 subprogram_head: PROCEDURE ID $@8 . arguments ';'

    ';'       reduce using rule 25 (arguments)
    $default  reduce using rule 23 ($@9)

    arguments  go to state 59
    $@9        go to state 58


State 40

   44 variable: ID .
   45         | ID . '[' expression ']'
   46 procedure_statement: ID .
   47                    | ID . '(' expression_list ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 61

    ASSIGNOP  reduce using rule 44 (variable)
    $default  reduce using rule 46 (procedure_statement)


State 41

   49 procedure_statement: READ . '(' expression ')'

    '('  shift, and go to state 62


State 42

   48 procedure_statement: WRITE . '(' expression ')'

    '('  shift, and go to state 63


State 43

   39 conditions: IF . expression THEN conditions ELSE conditions
   42 ifelse: IF . expression THEN statement
   43       | IF . expression THEN conditions ELSE ifelse

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 70
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 44

   40 conditions: WHILE . expression DO conditions

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 74
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 45

   41 conditions: FOR . ID ASSIGNOP expression TO expression DO conditions

    ID  shift, and go to state 75


State 46

   38 conditions: compound_statement .

    $default  reduce using rule 38 (conditions)


State 47

   29 compound_statement: BBEGIN optional_statements . END

    END  shift, and go to state 76


State 48

   30 optional_statements: statement_list .
   33 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 77

    $default  reduce using rule 30 (optional_statements)


State 49

   32 statement_list: statement .

    $default  reduce using rule 32 (statement_list)


State 50

   34 statement: conditions .

    $default  reduce using rule 34 (statement)


State 51

   35 statement: ifelse .

    $default  reduce using rule 35 (statement)


State 52

   36 conditions: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 78


State 53

   37 conditions: procedure_statement .

    $default  reduce using rule 37 (conditions)


State 54

    5 program: PROGRAM ID $@1 '(' identifier_list ')' ';' $@2 declarations $@3 subprogram_declarations $@4 compound_statement '.' .

    $default  reduce using rule 5 (program)


State 55

    8 declarations: declarations . VAR identifier_list ':' type ';'
   18 subprogram_declaration: subprogram_head $@5 declarations . $@6 subprogram_declarations compound_statement

    VAR  shift, and go to state 15

    $default  reduce using rule 17 ($@6)

    $@6  go to state 79


State 56

   11 type: ARRAY '[' INUM . DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 80


State 57

   20 subprogram_head: FUNCTION ID $@7 arguments . ':' standard_type ';'

    ':'  shift, and go to state 81


State 58

   24 arguments: $@9 . '(' parameter_list ')'

    '('  shift, and go to state 82


State 59

   22 subprogram_head: PROCEDURE ID $@8 arguments . ';'

    ';'  shift, and go to state 83


State 60

   47 procedure_statement: ID '(' . expression_list ')'

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression_list    go to state 84
    expression         go to state 85
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 61

   45 variable: ID '[' . expression ']'

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 86
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 62

   49 procedure_statement: READ '(' . expression ')'

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 87
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 63

   48 procedure_statement: WRITE '(' . expression ')'

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 88
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 64

   62 factor: INUM .

    $default  reduce using rule 62 (factor)


State 65

   63 factor: RNUM .

    $default  reduce using rule 63 (factor)


State 66

   59 factor: ID .
   60       | ID . '(' expression_list ')'
   61       | ID . '[' expression ']'

    '('  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 59 (factor)


State 67

   65 factor: NOT . factor

    INUM  shift, and go to state 64
    RNUM  shift, and go to state 65
    ID    shift, and go to state 66
    NOT   shift, and go to state 67
    '('   shift, and go to state 69

    factor  go to state 91


State 68

   55 simple_expression: ADDOP . term

    INUM  shift, and go to state 64
    RNUM  shift, and go to state 65
    ID    shift, and go to state 66
    NOT   shift, and go to state 67
    '('   shift, and go to state 69

    term    go to state 92
    factor  go to state 73


State 69

   64 factor: '(' . expression ')'

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 93
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 70

   39 conditions: IF expression . THEN conditions ELSE conditions
   42 ifelse: IF expression . THEN statement
   43       | IF expression . THEN conditions ELSE ifelse

    THEN  shift, and go to state 94


State 71

   52 expression: simple_expression .
   53           | simple_expression . RELOP simple_expression
   56 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 95
    ADDOP  shift, and go to state 96

    $default  reduce using rule 52 (expression)


State 72

   54 simple_expression: term .
   58 term: term . MULOP factor

    MULOP  shift, and go to state 97

    $default  reduce using rule 54 (simple_expression)


State 73

   57 term: factor .

    $default  reduce using rule 57 (term)


State 74

   40 conditions: WHILE expression . DO conditions

    DO  shift, and go to state 98


State 75

   41 conditions: FOR ID . ASSIGNOP expression TO expression DO conditions

    ASSIGNOP  shift, and go to state 99


State 76

   29 compound_statement: BBEGIN optional_statements END .

    $default  reduce using rule 29 (compound_statement)


State 77

   33 statement_list: statement_list ';' . statement

    ID      shift, and go to state 40
    READ    shift, and go to state 41
    WRITE   shift, and go to state 42
    BBEGIN  shift, and go to state 32
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    FOR     shift, and go to state 45

    compound_statement   go to state 46
    statement            go to state 100
    conditions           go to state 50
    ifelse               go to state 51
    variable             go to state 52
    procedure_statement  go to state 53


State 78

   36 conditions: variable ASSIGNOP . expression

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 101
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 79

   18 subprogram_declaration: subprogram_head $@5 declarations $@6 . subprogram_declarations compound_statement

    $default  reduce using rule 15 (subprogram_declarations)

    subprogram_declarations  go to state 102


State 80

   11 type: ARRAY '[' INUM DOTDOT . INUM ']' OF standard_type

    INUM  shift, and go to state 103


State 81

   20 subprogram_head: FUNCTION ID $@7 arguments ':' . standard_type ';'

    INTEGER  shift, and go to state 26
    REAL     shift, and go to state 27

    standard_type  go to state 104


State 82

   24 arguments: $@9 '(' . parameter_list ')'

    ID  shift, and go to state 7

    $default  reduce using rule 28 (parameter_list)

    identifier_list  go to state 105
    parameter_list   go to state 106


State 83

   22 subprogram_head: PROCEDURE ID $@8 arguments ';' .

    $default  reduce using rule 22 (subprogram_head)


State 84

   47 procedure_statement: ID '(' expression_list . ')'
   51 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 107
    ','  shift, and go to state 108


State 85

   50 expression_list: expression .

    $default  reduce using rule 50 (expression_list)


State 86

   45 variable: ID '[' expression . ']'

    ']'  shift, and go to state 109


State 87

   49 procedure_statement: READ '(' expression . ')'

    ')'  shift, and go to state 110


State 88

   48 procedure_statement: WRITE '(' expression . ')'

    ')'  shift, and go to state 111


State 89

   60 factor: ID '(' . expression_list ')'

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression_list    go to state 112
    expression         go to state 85
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 90

   61 factor: ID '[' . expression ']'

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 113
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 91

   65 factor: NOT factor .

    $default  reduce using rule 65 (factor)


State 92

   55 simple_expression: ADDOP term .
   58 term: term . MULOP factor

    MULOP  shift, and go to state 97

    $default  reduce using rule 55 (simple_expression)


State 93

   64 factor: '(' expression . ')'

    ')'  shift, and go to state 114


State 94

   39 conditions: IF expression THEN . conditions ELSE conditions
   42 ifelse: IF expression THEN . statement
   43       | IF expression THEN . conditions ELSE ifelse

    ID      shift, and go to state 40
    READ    shift, and go to state 41
    WRITE   shift, and go to state 42
    BBEGIN  shift, and go to state 32
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    FOR     shift, and go to state 45

    compound_statement   go to state 46
    statement            go to state 115
    conditions           go to state 116
    ifelse               go to state 51
    variable             go to state 52
    procedure_statement  go to state 53


State 95

   53 expression: simple_expression RELOP . simple_expression

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    simple_expression  go to state 117
    term               go to state 72
    factor             go to state 73


State 96

   56 simple_expression: simple_expression ADDOP . term

    INUM  shift, and go to state 64
    RNUM  shift, and go to state 65
    ID    shift, and go to state 66
    NOT   shift, and go to state 67
    '('   shift, and go to state 69

    term    go to state 118
    factor  go to state 73


State 97

   58 term: term MULOP . factor

    INUM  shift, and go to state 64
    RNUM  shift, and go to state 65
    ID    shift, and go to state 66
    NOT   shift, and go to state 67
    '('   shift, and go to state 69

    factor  go to state 119


State 98

   40 conditions: WHILE expression DO . conditions

    ID      shift, and go to state 40
    READ    shift, and go to state 41
    WRITE   shift, and go to state 42
    BBEGIN  shift, and go to state 32
    IF      shift, and go to state 120
    WHILE   shift, and go to state 44
    FOR     shift, and go to state 45

    compound_statement   go to state 46
    conditions           go to state 121
    variable             go to state 52
    procedure_statement  go to state 53


State 99

   41 conditions: FOR ID ASSIGNOP . expression TO expression DO conditions

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 122
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 100

   33 statement_list: statement_list ';' statement .

    $default  reduce using rule 33 (statement_list)


State 101

   36 conditions: variable ASSIGNOP expression .

    $default  reduce using rule 36 (conditions)


State 102

   14 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   18 subprogram_declaration: subprogram_head $@5 declarations $@6 subprogram_declarations . compound_statement

    FUNCTION   shift, and go to state 20
    PROCEDURE  shift, and go to state 21
    BBEGIN     shift, and go to state 32

    subprogram_declaration  go to state 23
    subprogram_head         go to state 24
    compound_statement      go to state 123


State 103

   11 type: ARRAY '[' INUM DOTDOT INUM . ']' OF standard_type

    ']'  shift, and go to state 124


State 104

   20 subprogram_head: FUNCTION ID $@7 arguments ':' standard_type . ';'

    ';'  shift, and go to state 125


State 105

    7 identifier_list: identifier_list . ',' ID
   26 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 126


State 106

   24 arguments: $@9 '(' parameter_list . ')'
   27 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 127
    ';'  shift, and go to state 128


State 107

   47 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 47 (procedure_statement)


State 108

   51 expression_list: expression_list ',' . expression

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 129
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 109

   45 variable: ID '[' expression ']' .

    $default  reduce using rule 45 (variable)


State 110

   49 procedure_statement: READ '(' expression ')' .

    $default  reduce using rule 49 (procedure_statement)


State 111

   48 procedure_statement: WRITE '(' expression ')' .

    $default  reduce using rule 48 (procedure_statement)


State 112

   51 expression_list: expression_list . ',' expression
   60 factor: ID '(' expression_list . ')'

    ')'  shift, and go to state 130
    ','  shift, and go to state 108


State 113

   61 factor: ID '[' expression . ']'

    ']'  shift, and go to state 131


State 114

   64 factor: '(' expression ')' .

    $default  reduce using rule 64 (factor)


State 115

   42 ifelse: IF expression THEN statement .

    $default  reduce using rule 42 (ifelse)


State 116

   34 statement: conditions .
   39 conditions: IF expression THEN conditions . ELSE conditions
   43 ifelse: IF expression THEN conditions . ELSE ifelse

    ELSE  shift, and go to state 132

    $default  reduce using rule 34 (statement)


State 117

   53 expression: simple_expression RELOP simple_expression .
   56 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 96

    $default  reduce using rule 53 (expression)


State 118

   56 simple_expression: simple_expression ADDOP term .
   58 term: term . MULOP factor

    MULOP  shift, and go to state 97

    $default  reduce using rule 56 (simple_expression)


State 119

   58 term: term MULOP factor .

    $default  reduce using rule 58 (term)


State 120

   39 conditions: IF . expression THEN conditions ELSE conditions

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 133
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 121

   40 conditions: WHILE expression DO conditions .

    $default  reduce using rule 40 (conditions)


State 122

   41 conditions: FOR ID ASSIGNOP expression . TO expression DO conditions

    TO  shift, and go to state 134


State 123

   18 subprogram_declaration: subprogram_head $@5 declarations $@6 subprogram_declarations compound_statement .

    $default  reduce using rule 18 (subprogram_declaration)


State 124

   11 type: ARRAY '[' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 135


State 125

   20 subprogram_head: FUNCTION ID $@7 arguments ':' standard_type ';' .

    $default  reduce using rule 20 (subprogram_head)


State 126

   26 parameter_list: identifier_list ':' . type

    ARRAY    shift, and go to state 25
    INTEGER  shift, and go to state 26
    REAL     shift, and go to state 27

    type           go to state 136
    standard_type  go to state 29


State 127

   24 arguments: $@9 '(' parameter_list ')' .

    $default  reduce using rule 24 (arguments)


State 128

   27 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 7

    identifier_list  go to state 137


State 129

   51 expression_list: expression_list ',' expression .

    $default  reduce using rule 51 (expression_list)


State 130

   60 factor: ID '(' expression_list ')' .

    $default  reduce using rule 60 (factor)


State 131

   61 factor: ID '[' expression ']' .

    $default  reduce using rule 61 (factor)


State 132

   39 conditions: IF expression THEN conditions ELSE . conditions
   43 ifelse: IF expression THEN conditions ELSE . ifelse

    ID      shift, and go to state 40
    READ    shift, and go to state 41
    WRITE   shift, and go to state 42
    BBEGIN  shift, and go to state 32
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    FOR     shift, and go to state 45

    compound_statement   go to state 46
    conditions           go to state 138
    ifelse               go to state 139
    variable             go to state 52
    procedure_statement  go to state 53


State 133

   39 conditions: IF expression . THEN conditions ELSE conditions

    THEN  shift, and go to state 140


State 134

   41 conditions: FOR ID ASSIGNOP expression TO . expression DO conditions

    INUM   shift, and go to state 64
    RNUM   shift, and go to state 65
    ID     shift, and go to state 66
    NOT    shift, and go to state 67
    ADDOP  shift, and go to state 68
    '('    shift, and go to state 69

    expression         go to state 141
    simple_expression  go to state 71
    term               go to state 72
    factor             go to state 73


State 135

   11 type: ARRAY '[' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER  shift, and go to state 26
    REAL     shift, and go to state 27

    standard_type  go to state 142


State 136

   26 parameter_list: identifier_list ':' type .

    $default  reduce using rule 26 (parameter_list)


State 137

    7 identifier_list: identifier_list . ',' ID
   27 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 143


State 138

   39 conditions: IF expression THEN conditions ELSE conditions .

    $default  reduce using rule 39 (conditions)


State 139

   43 ifelse: IF expression THEN conditions ELSE ifelse .

    $default  reduce using rule 43 (ifelse)


State 140

   39 conditions: IF expression THEN . conditions ELSE conditions

    ID      shift, and go to state 40
    READ    shift, and go to state 41
    WRITE   shift, and go to state 42
    BBEGIN  shift, and go to state 32
    IF      shift, and go to state 120
    WHILE   shift, and go to state 44
    FOR     shift, and go to state 45

    compound_statement   go to state 46
    conditions           go to state 144
    variable             go to state 52
    procedure_statement  go to state 53


State 141

   41 conditions: FOR ID ASSIGNOP expression TO expression . DO conditions

    DO  shift, and go to state 145


State 142

   11 type: ARRAY '[' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 11 (type)


State 143

   27 parameter_list: parameter_list ';' identifier_list ':' . type

    ARRAY    shift, and go to state 25
    INTEGER  shift, and go to state 26
    REAL     shift, and go to state 27

    type           go to state 146
    standard_type  go to state 29


State 144

   39 conditions: IF expression THEN conditions . ELSE conditions

    ELSE  shift, and go to state 147


State 145

   41 conditions: FOR ID ASSIGNOP expression TO expression DO . conditions

    ID      shift, and go to state 40
    READ    shift, and go to state 41
    WRITE   shift, and go to state 42
    BBEGIN  shift, and go to state 32
    IF      shift, and go to state 120
    WHILE   shift, and go to state 44
    FOR     shift, and go to state 45

    compound_statement   go to state 46
    conditions           go to state 148
    variable             go to state 52
    procedure_statement  go to state 53


State 146

   27 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 27 (parameter_list)


State 147

   39 conditions: IF expression THEN conditions ELSE . conditions

    ID      shift, and go to state 40
    READ    shift, and go to state 41
    WRITE   shift, and go to state 42
    BBEGIN  shift, and go to state 32
    IF      shift, and go to state 120
    WHILE   shift, and go to state 44
    FOR     shift, and go to state 45

    compound_statement   go to state 46
    conditions           go to state 138
    variable             go to state 52
    procedure_statement  go to state 53


State 148

   41 conditions: FOR ID ASSIGNOP expression TO expression DO conditions .

    $default  reduce using rule 41 (conditions)
